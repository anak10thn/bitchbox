#N canvas 23 56 1245 683 10;
#X obj 70 532 outlet~;
#X obj 71 39 inlet~;
#N canvas 181 83 657 686 bypass 0;
#X obj 195 -4 route 0 1;
#X obj 195 23 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 220 24 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 168 65 1;
#X msg 195 65 0;
#X msg 220 65 0;
#X msg 246 65 1;
#X obj 74 218 outlet~;
#X obj 195 -33 inlet;
#X obj 75 -33 inlet~;
#X obj 138 -33 inlet~;
#N canvas 628 268 450 300 pot~ 0;
#X obj -183 96 line~;
#X obj -220 175 *~;
#X obj -182 135 *~;
#X msg -183 69 \$1 20;
#X obj -221 20 inlet~;
#X obj -221 205 outlet~;
#X obj -183 43 inlet;
#X connect 0 0 2 0;
#X connect 0 0 2 1;
#X connect 1 0 5 0;
#X connect 2 0 1 1;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 6 0 3 0;
#X restore 74 138 pd pot~;
#N canvas 0 54 1280 718 pot~ 0;
#X obj 170 154 line~;
#X obj 133 233 *~;
#X obj 171 193 *~;
#X msg 170 127 \$1 20;
#X obj 132 78 inlet~;
#X obj 132 263 outlet~;
#X obj 170 101 inlet;
#X connect 0 0 2 0;
#X connect 0 0 2 1;
#X connect 1 0 5 0;
#X connect 2 0 1 1;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 6 0 3 0;
#X restore 137 138 pd pot~;
#X connect 0 0 1 0;
#X connect 0 1 2 0;
#X connect 1 0 3 0;
#X connect 1 0 4 0;
#X connect 2 0 5 0;
#X connect 2 0 6 0;
#X connect 3 0 11 1;
#X connect 4 0 12 1;
#X connect 5 0 11 1;
#X connect 6 0 12 1;
#X connect 8 0 0 0;
#X connect 9 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 7 0;
#X restore 70 493 pd bypass;
#X obj 101 102 cnv 15 338 22 empty empty Noise-Gate 2 8 0 12 -191407
-13381 0;
#X floatatom 408 102 3 0 15 0 level - -, f 3;
#X obj 230 102 hradio 20 1 0 2 empty empty off|on -38 8 0 10 -228856
-1 -1 1;
#X obj 379 7 loadbang;
#X floatatom 461 343 0 0 1000 0 - - -;
#N canvas 3 54 1265 683 fft-analysis 0;
#X obj 35 589 *~;
#X obj 143 305 *~;
#X obj 158 150 *~;
#X obj 35 72 *~;
#X obj 76 527 *~;
#X obj 35 44 inlet~;
#X obj 35 528 *~;
#X obj 34 101 rfft~;
#X obj 35 558 rifft~;
#X obj 36 616 outlet~;
#X obj 119 149 *~;
#X obj 119 176 +~;
#X obj 100 422 /~;
#X obj 355 23 block~ 1024 4;
#X text 176 446 is signal power and "m" is mask.;
#X obj 131 332 -~;
#X obj 131 355 max~ 0;
#X obj 99 448 q8_sqrt~;
#X text 175 464 (zero if s < m).;
#X obj 144 256 tabreceive~ \$0-mask;
#X obj 76 72 tabreceive~ \$0-hann;
#X obj 69 590 tabreceive~ \$0-hann;
#N canvas 212 165 910 495 calculate-mask 0;
#X obj 125 379 inlet~;
#X msg 371 283 0;
#X msg 371 166 0;
#X obj 240 196 float;
#X obj 294 200 + 1;
#X obj 240 144 bang~;
#X obj 240 169 spigot;
#X floatatom 411 218 0 0 0 0 - - -;
#X obj 315 408 -~;
#X obj 371 258 sel 0;
#X obj 327 443 *~;
#X obj 293 443 +~;
#X floatatom 351 313 0 0 0 0 - - -;
#X obj 240 219 t f f;
#X obj 371 141 t b f;
#X obj 411 165 /;
#X text 483 212 number of;
#X text 491 227 frames;
#X floatatom 481 166 0 0 0 0 - - -;
#X obj 481 136 / 4;
#X text 521 133 hop size (analysis;
#X text 546 149 period) in msec;
#X obj 359 408 tabreceive~ \$0-mask;
#X obj 292 468 tabsend~ \$0-mask;
#X obj 371 218 <;
#X obj 235 258 expr 1/($f1+1);
#X text 53 6 calculate a mask using N msec of background noise;
#X text 43 354 current power (for each channel);
#X text 367 430 average the current power into the last mask to get
the new mask. The new value is weighted 1/n on the nth iteration.;
#X text 390 312 weight to average in new power to mask;
#X text 11 203 loop counting to desired;
#X text 78 219 number of frames;
#X text 53 25 This loops for "make-mask" milliseconds \, averaging
power in each channel over that amount of time. This is done by a moving
average whose weight is adjusted to average each new value equally
with each of the accumulating ones.;
#X obj 470 16 inlet;
#X obj 598 15 inlet;
#X text 466 39 r make-mask;
#X text 588 37 r window-msec;
#X connect 0 0 8 0;
#X connect 1 0 12 0;
#X connect 2 0 3 1;
#X connect 2 0 24 0;
#X connect 3 0 13 0;
#X connect 3 0 4 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 7 0 24 1;
#X connect 8 0 10 0;
#X connect 9 0 1 0;
#X connect 10 0 11 1;
#X connect 11 0 23 0;
#X connect 12 0 10 1;
#X connect 13 0 24 0;
#X connect 13 1 25 0;
#X connect 14 0 2 0;
#X connect 14 1 15 0;
#X connect 15 0 7 0;
#X connect 19 0 15 1;
#X connect 19 0 18 0;
#X connect 22 0 8 1;
#X connect 22 0 11 0;
#X connect 24 0 6 1;
#X connect 24 0 9 0;
#X connect 25 0 12 0;
#X connect 33 0 14 0;
#X connect 34 0 19 0;
#X restore 132 203 pd calculate-mask;
#X text 91 98 real Fourier transform;
#X obj 357 57 loadbang;
#X text 193 355 ... but not less than zero;
#X text 101 561 real inverse Fourier transform;
#X text 196 498 normalize by 2/(3N) where N is window size;
#X text 168 332 current power ("s") minus level-adjusted mask ("m")
;
#X text 156 175 compute power (call it "s") in each channel;
#X obj 123 395 +~ 1e-20;
#X text 203 395 protect against division by zero;
#X text 179 426 compute sqrt((s-m)/s) where "s";
#X text 296 204 <- subwindow calculates noise mask;
#X obj 98 499 /~ 1536;
#X msg 357 80 \; window-size 1024;
#X floatatom 224 307 5 0 0 0 - - -, f 5;
#X obj 165 278 r \$0-mask-level;
#X obj 594 86 r make-mask;
#X obj 704 86 r window-msec;
#X obj 593 49 inlet;
#X obj 707 50 inlet;
#X text 591 121 r make-mask;
#X text 704 123 r window-msec;
#X connect 0 0 9 0;
#X connect 1 0 15 1;
#X connect 2 0 11 1;
#X connect 3 0 7 0;
#X connect 4 0 8 1;
#X connect 5 0 3 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 7 0 10 0;
#X connect 7 0 10 1;
#X connect 7 1 4 0;
#X connect 7 1 2 0;
#X connect 7 1 2 1;
#X connect 8 0 0 0;
#X connect 10 0 11 0;
#X connect 11 0 15 0;
#X connect 11 0 22 0;
#X connect 11 0 30 0;
#X connect 12 0 17 0;
#X connect 15 0 16 0;
#X connect 16 0 12 0;
#X connect 17 0 34 0;
#X connect 19 0 1 0;
#X connect 20 0 3 1;
#X connect 21 0 0 1;
#X connect 24 0 35 0;
#X connect 30 0 12 1;
#X connect 34 0 6 1;
#X connect 34 0 4 1;
#X connect 37 0 1 1;
#X connect 37 0 36 0;
#X connect 40 0 22 1;
#X connect 41 0 22 2;
#X restore 96 444 pd fft-analysis;
#N canvas 3 54 1265 718 hann-window 0;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-hann 1024 float 0;
#X coords 0 1 1023 0 300 100 1;
#X restore 40 472 graph;
#X obj 378 165 osc~;
#X obj 378 190 *~ -0.5;
#X obj 378 214 +~ 0.5;
#X obj 331 247 tabwrite~ \$0-hann;
#X obj 37 88 r window-size;
#X obj 38 173 /;
#X obj 127 142 samplerate~;
#X obj 38 251 s window-sec;
#X obj 177 204 swap;
#X obj 177 228 /;
#X obj 177 281 s window-hz;
#X obj 49 201 * 1000;
#X obj 48 357 s window-msec;
#X obj 38 115 t f b f;
#X msg 173 92 resize \$1;
#X obj 173 116 s \$0-hann;
#X obj 330 90 r window-hz;
#X msg 382 130 0;
#X obj 330 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X obj 49 381 outlet;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 14 0;
#X connect 6 0 8 0;
#X connect 6 0 12 0;
#X connect 7 0 6 1;
#X connect 7 0 9 1;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 10 0 19 0;
#X connect 12 0 21 0;
#X connect 14 0 6 0;
#X connect 14 0 9 0;
#X connect 14 1 7 0;
#X connect 14 2 15 0;
#X connect 15 0 16 0;
#X connect 18 0 1 1;
#X connect 19 0 1 0;
#X connect 19 1 4 0;
#X connect 19 1 18 0;
#X restore 461 420 pd hann-window;
#X text 700 179 DENOISER;
#X text 99 379 calculate noise mask;
#N canvas 3 55 592 442 mask-table 0;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-mask 512 float 0;
#X coords 0 500 511 0 400 300 1;
#X restore 110 76 graph;
#X text 25 14 This table (1002-mask) is the average power measured
in each channel of the spectrum \, presumed to represent the noise
floor.;
#X restore 463 462 pd mask-table;
#X text 579 204 This patch attempts to scrub the noise floor from a
sample in two steps. First using the "make-mask" message (which is
caught in the "fft-analysis" window) \, you estimate the background
spectrum. You would normally do this at a moment when only the background
noise is audible. Then \, turn on "masking" (to 15 by default \, but
try other values) and the patch will try to clean the background noise
out of a signal.;
#X text 583 328 For this demonstration \, you control the amplitudes
of a looping sample and a filtered noise source. Normally you'd hit
"calculate noise mask" with only hte noise turned on \, then turn both
the noise and the sampler on \, and also "masking" \, to see if the
patch can clean the noise out of the signal. Open the "fft-analysis"
window to see the algorithm \, or the "insample" window to change samples
\, or "mask-table" to see the current mask (the average signal power
of the noise to clean out of the signal).;
#X obj 316 102 bng 20 250 50 0 empty empty mask -28 7 0 10 -228856
-258113 -1;
#X obj 521 11 inlet;
#X obj 218 545 outlet;
#X obj 216 509 pack f f;
#X obj 218 483 bang;
#X obj 460 317 line;
#X floatatom 460 242 3 0 15 0 level - -, f 3;
#X msg 460 180 set \$1;
#X msg 328 189 0;
#X obj 571 142 int;
#X obj 513 120 int;
#X obj 572 71 * 15;
#X obj 513 95 + 0.5;
#X obj 513 142 sel 1;
#X msg 379 40 1;
#X obj 461 368 s \$0-mask-level;
#X text 99 335 2018_06_17_08_49: experiment with diff \; lengths on
this to see which works best \; it is how long the get noise mask window
is open;
#X text 118 294 r make-mask;
#X text 161 319 r window-msec;
#X text 460 438 s window-msec;
#X msg 142 273 500;
#X obj 519 36 route 0 1 2;
#X text 421 260 orig: 0 \, \$1 1000;
#X msg 460 279 0 \, \$1 1000;
#X obj 252 192 delay 500;
#X obj 572 93 + 0.5;
#X connect 1 0 2 0;
#X connect 1 0 8 0;
#X connect 2 0 0 0;
#X connect 4 0 18 1;
#X connect 4 0 19 0;
#X connect 4 0 22 0;
#X connect 5 0 2 2;
#X connect 5 0 18 0;
#X connect 6 0 29 0;
#X connect 7 0 30 0;
#X connect 8 0 2 1;
#X connect 9 0 8 2;
#X connect 15 0 23 0;
#X connect 15 0 35 0;
#X connect 15 0 39 0;
#X connect 16 0 36 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 20 0 7 0;
#X connect 21 0 38 0;
#X connect 22 0 21 0;
#X connect 23 0 38 0;
#X connect 24 0 4 0;
#X connect 25 0 28 0;
#X connect 26 0 40 0;
#X connect 27 0 25 0;
#X connect 28 0 15 0;
#X connect 29 0 5 0;
#X connect 29 0 26 0;
#X connect 35 0 8 1;
#X connect 36 0 5 0;
#X connect 36 1 27 0;
#X connect 36 2 26 0;
#X connect 38 0 20 0;
#X connect 39 0 21 0;
#X connect 40 0 24 0;
#X coords 0 -1 1 1 340 26 2 100 100;
